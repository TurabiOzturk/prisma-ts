// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int       @id @default(autoincrement()) @map("id")
  name      String    @map("name")
  createdAt DateTime  @default(now()) @map("created_at")
  deletedAt DateTime? @map("deleted_at")
  posts     Post[]

  @@map("categories")
}

model Post {
  id          Int       @id @default(autoincrement()) @map("id")
  categoryId  Int       @map("category_id")
  userId      Int       @map("user_id")
  title       String    @map("title")
  content     String    @map("content")
  createdAt   DateTime  @default(now()) @map("created_at")
  deletedAt   DateTime? @map("deleted_at")
  publishedAt DateTime? @map("published_at")
  category    Category  @relation(fields: [categoryId], references: [id])
  comment     Comment[]
  postTag     PostTag[]
  User        User[]

  @@map("posts")
}

model Comment {
  id            Int      @id @default(autoincrement()) @map("id")
  postId        Int      @map("post_id")
  userId        Int      @map("user_id")
  content       String   @map("content")
  commenterName String   @map("commenter_name")
  createdAt     DateTime @default(now()) @map("created_at")
  post          Post     @relation(fields: [postId], references: [id])
  User          User[]

  @@map("comments")
}

model Tag {
  id      Int       @id @default(autoincrement()) @map("id")
  name    String    @map("name")
  postTag PostTag[]

  @@map("tags")
}

model PostTag {
  postId Int  @map("post_id")
  tagId  Int  @map("tag_id")
  post   Post @relation(fields: [postId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
  @@map("post_tags")
}

model User {
  id             Int            @id @default(autoincrement()) @map("id")
  userName       String         @unique @map("user_name")
  name           String         @map("name")
  hashedPassword String         @map("hashed_password")
  role           String         @default("member") @map("role")
  posts          Post[]
  comments       Comment[]
  deletedAt      DateTime?      @map("deleted_at")
  RefreshToken   RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  expiresAt DateTime  @map("expires_at")
  revokedAt DateTime? @map("revoked_at")

  user User @relation(fields: [userId], references: [id])

  @@map("refresh_tokens")
}
